
#HERE := $(shell pwd)
HERE = .
CAS = $(HERE)/../../..
TOP = $(CAS)/../..
SRC = $(CAS)/generic
CA = $(CAS)/../ca
IOSRC = $(CAS)/io/bsdSocket
OSSRC = $(CAS)/os/vxWorks
VPATH = $(SRC) $(SRC)/mt $(IOSRC) $(OSSRC) 

include $(TOP)/config/CONFIG_BASE

USR_INCLUDES = -I$(SRC) -I$(OSSRC) -I$(IOSRC) -I$(CA)\
	-I$(TOP)/src/include/os/vxWorks

DEPLIBS_BASE = $(EPICS_BASE_LIB)

SRCS.cc += caServer.cc 
SRCS.cc += caServerI.cc 
SRCS.cc += casCoreClient.cc 
SRCS.cc += casClient.cc 
SRCS.cc += casDGClient.cc 
SRCS.cc += casStrmClient.cc 
SRCS.cc += casPV.cc 
SRCS.cc += casPVI.cc 
SRCS.cc += casChannel.cc 
SRCS.cc += casChannelI.cc 
SRCS.cc += casClientMon.cc 
SRCS.cc += casChanDelEv.cc 
SRCS.cc += casMsgIO.cc 
SRCS.cc += casAsyncIO.cc 
SRCS.cc += casAsyncIOI.cc 
SRCS.cc += casEventSys.cc 
SRCS.cc += casMonitor.cc 
SRCS.cc += casMonEvent.cc 
SRCS.cc += outBuf.cc 
SRCS.cc += inBuf.cc 
SRCS.cc += casEventMask.cc
SRCS.cc += ioBlocked.cc

SRCS.cc += caServerOS.cc
SRCS.cc += casDGOS.cc
SRCS.cc += casStreamOS.cc

SRCS.cc += caServerIO.cc
SRCS.cc += casDGIO.cc
SRCS.cc += casStreamIO.cc
SRCS.c  += sigPipeIgnore.c

LIBOBJS += caServer.o
LIBOBJS += caServerI.o
LIBOBJS += casCoreClient.o
LIBOBJS += casClient.o
LIBOBJS += casDGClient.o
LIBOBJS += casStrmClient.o
LIBOBJS += casPV.o
LIBOBJS += casPVI.o
LIBOBJS += casChannel.o
LIBOBJS += casChannelI.o
LIBOBJS += casClientMon.o
LIBOBJS += casChanDelEv.o
LIBOBJS += casMsgIO.o
LIBOBJS += casAsyncIO.o
LIBOBJS += casAsyncIOI.o
LIBOBJS += casEventSys.o
LIBOBJS += casMonitor.o
LIBOBJS += casMonEvent.o
LIBOBJS += outBuf.o
LIBOBJS += inBuf.o 
LIBOBJS += casEventMask.o
LIBOBJS += ioBlocked.o

LIBOBJS += caServerOS.o
LIBOBJS += casDGOS.o
LIBOBJS += casStreamOS.o

LIBOBJS += caServerIO.o
LIBOBJS += casDGIO.o
LIBOBJS += casStreamIO.o
LIBOBJS += sigPipeIgnore.o

LIBNAME = libcas.o

include $(TOP)/config/RULES.Vx

obj: $(LIBOBJS) 

test.o:

clean::
	@$(RM) -rf Templates.DB

