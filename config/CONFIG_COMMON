#
#  $Id$
#
#  CONFIG_COMMON - Another EPICS BASE config file
#	by Matthew Needes and Mike Bordua
#
#  This file is to be maintained by the EPICS community.
#

# Common Configuration Information 

# CROSS1 will be defined only when CROSS_COMPILER_HOST_ARCHS is NOT defined
CROSS1 = $(CROSS_COMPILER_TARGET_ARCHS$(word 1,$(CROSS_COMPILER_HOST_ARCHS)))
 
# CROSS2 will be defined only when CROSS_COMPILER_HOST_ARCHS is defined
# and HOST_ARCH is one of it's words  
CROSS2 = $(CROSS_COMPILER_TARGET_ARCHS$(filter-out 1,$(words $(filter $(HOST_ARCH),$(CROSS_COMPILER_HOST_ARCHS)))))
 
BUILD_ARCHS = $(HOST_ARCH) $(CROSS1) $(CROSS2)
 
INSTALL_LOCATION = $(TOP)
 
INSTALL_LOCATION_LIB        = $(INSTALL_LOCATION)/lib
INSTALL_LOCATION_BIN        = $(INSTALL_LOCATION)/bin

INSTALL_INCLUDE             = $(INSTALL_LOCATION)/include
INSTALL_DOC                 = $(INSTALL_LOCATION)/doc
INSTALL_HTML                = $(INSTALL_LOCATION)/html
INSTALL_MAN                 = $(INSTALL_LOCATION)/man
INSTALL_TEMPLATES           = $(INSTALL_LOCATION)/templates
INSTALL_DBD                 = $(INSTALL_LOCATION)/dbd
INSTALL_CONFIG              = $(INSTALL_LOCATION)/config

EPICS_BASE_INCLUDE      = $(EPICS_BASE)/include
EPICS_BASE_DBD          = $(EPICS_BASE)/dbd

EPICS_EXTENSIONS_INCLUDE      = $(EPICS_EXTENSIONS)/include
EPICS_EXTENSIONS_TEMPLATES    = $(EPICS_EXTENSIONS)/templates

DIVIDER = .

EPICS_BASE_HOST_BIN = $(EPICS_BASE)/bin/$(HOST_ARCH)


# private versions of lex/yacc from EPICS
EYACC = $(EPICS_BASE_HOST_BIN)/antelope$(EXE)
ELEX = $(EPICS_BASE_HOST_BIN)/e_flex$(EXE) -S$(EPICS_BASE_INCLUDE)/flex.skel.static

# Default for perl if it's on the PATH,
# otherwise override this in e.g. CONFIG_SITE
PERL=perl

# install from EPICS
INSTALL = $(PERL) $(EPICS_BASE_HOST_BIN)/installEpics.pl
INSTALL_PRODUCT = $(INSTALL)

# dbtools from EPICS

# state notation language compiler (installed from base/src/sequencer)
SNC = $(EPICS_BASE_HOST_BIN)/snc

# vxWorks definitions
VX_IS_TORNADO = 1
ifdef VX_IS_TORNADO
VX_CONFIG_DIR = $(VX_DIR)/target/config
VX_INCLUDE = $(VX_DIR)/target/h
VX_GNU_BIN = $(VX_GNU)/bin
VX_GNU_LIB = $(VX_GNU)/lib
else
VX_CONFIG_DIR = $(VX_DIR)/config
VX_INCLUDE = $(VX_DIR)/h
VX_GNU_BIN = $(VX_GNU)/$(HOST_ARCH).$(ARCH_CLASS)/bin
VX_GNU_LIB = $(VX_GNU)/$(HOST_ARCH).$(ARCH_CLASS)/lib
endif

ifdef T_A

INSTALL_LIB                 = $(INSTALL_LOCATION_LIB)/$(T_A)
INSTALL_TCLLIB              = $(INSTALL_LOCATION_LIB)/$(T_A)
INSTALL_BIN                 = $(INSTALL_LOCATION_BIN)/$(T_A)

EPICS_BASE_LIB          = $(EPICS_BASE)/lib/$(T_A)
EPICS_BASE_BIN          = $(EPICS_BASE)/bin/$(T_A)

EPICS_EXTENSIONS_LIB          = $(EPICS_EXTENSIONS)/lib/$(T_A)
EPICS_EXTENSIONS_BIN          = $(EPICS_EXTENSIONS)/bin/$(T_A)

VX_IMAGE = $(VX_CONFIG_DIR)/$(T_A)/vxWorks
VX_IMAGE_SYM = $(VX_CONFIG_DIR)/$(T_A)/vxWorks.sym

# location of installed vxWorks image
EPICS_VX_IMAGE = $(EPICS_BASE_BIN)/vxWorks
EPICS_VX_IMAGE_SYM = $(EPICS_BASE_BIN)/vxWorks.sym

endif

