#
# $Id$
#
#  EPICS RULES_ARCH
#       by Matthew Needes and Mike Bordua and Janet Anderson
#

all:: install

DO_X += inc
DO_X += build
DO_X += install
DO_X += depends 

actionPart = $(word 1, $(subst $(DIVIDER), ,$@))
archPart = $(word 2, $(subst $(DIVIDER), ,$@))

ifeq (Makefile.$(BUILD_TYPE), $(wildcard Makefile.$(BUILD_TYPE)))
hostArchs = $(HOST_ARCH) $(filter-out $(HOST_ARCH),$(CROSS_COMPILER_HOST_ARCHS))
hostDirs = $(addprefix O.,$(hostArchs))
hostTargets = 	$(foreach x, $(DO_X),\
		$(foreach arch,$(hostArchs), $(x)$(DIVIDER)$(arch)))
$(hostTargets) : $(hostDirs)
	$(MAKE) -C O.$(archPart) -f ../Makefile.$(BUILD_TYPE) T_A=$(archPart) $(actionPart)
endif

ifeq (Makefile.Vx, $(wildcard Makefile.Vx))
crossArchs = $(CROSS_COMPILER_TARGET_ARCHS)
crossDirs = $(addprefix O.,$(crossArchs))
crossTargets = $(foreach x, $(DO_X), \
	$(foreach arch, $(CROSS_COMPILER_TARGET_ARCHS), $(x)$(DIVIDER)$(arch)))
$(crossTargets) : $(crossDirs)
	$(MAKE) -C O.$(archPart) -f ../Makefile.Vx T_A=$(archPart) $(actionPart)
endif

$(hostDirs) : 
	$(MKDIR) $@
	echo "T_A=$(subst O.,,$@)" > $@/Makefile
	echo "include ../Makefile.$(BUILD_TYPE)" >> $@/Makefile

$(crossDirs) : 
	$(MKDIR) $@
	echo "T_A=$@" > $@/Makefile
	echo "include ../Makefile.Vx >> $@/Makefile

#
# action targets
#
actionTargets = $(foreach x, $(DO_X), \
		$(addprefix $(x)$(DIVIDER), host cross))
inc :: inc$(DIVIDER)host inc$(DIVIDER)cross
inc$(DIVIDER)host :: $(addprefix inc$(DIVIDER), $(hostArchs))
inc$(DIVIDER)cross :: $(addprefix inc$(DIVIDER), $(crossArchs))

install :: install$(DIVIDER)host install$(DIVIDER)cross
install$(DIVIDER)host :: $(addprefix install$(DIVIDER), $(hostArchs))
install$(DIVIDER)cross :: $(addprefix install$(DIVIDER), $(crossArchs))

depends:: depends$(DIVIDER)host depends$(DIVIDER)cross
depends$(DIVIDER)host :: $(addprefix depends$(DIVIDER), $(hostArchs))
depends$(DIVIDER)cross :: $(addprefix depends$(DIVIDER), $(crossArchs))

build :: build$(DIVIDER)host build$(DIVIDER)cross
build$(DIVIDER)host :: $(addprefix build$(DIVIDER), $(hostArchs))
build$(DIVIDER)cross :: $(addprefix build$(DIVIDER), $(crossArchs))

actionTargets += $(addprefix clean$(DIVIDER), host cross))
clean$(DIVIDER)host :: $(addprefix clean$(DIVIDER), $(hostArchs))
clean$(DIVIDER)cross :: $(addprefix clean$(DIVIDER), $(crossArchs))

#
# arch targets
#
host : $(hostArchs)
cross : $(crossArchs)
$(hostArchs) : $(hostDirs)
	$(MAKE) -C O.$@ -f ../Makefile.$(BUILD_TYPE) T_A=$@ 
$(crossArchs) : $(crossDirs)
	$(MAKE) -C O.$@ -f ../Makefile.Vx T_A=$@

clean :: $(addprefix clean$(DIVIDER), $(hostArchs) $(crossArchs) ) 
clean$(DIVIDER)% : 
	$(RMDIR) O.$*

.PHONY : $(archTargets)
.PHONY : $(cleanTargets)
.PHONY : $(actionTargets)
.PHONY : $(hostArchs) $(crossArchs)
.PHONY : $(DO_X)
.PHONY : clean all 
.PHONY : 
