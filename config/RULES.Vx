# $Id$

INCREC +=$(RECTYPES) $(MENUS)
INSTALL_PROD = $(INSTALL_BIN) $(PROD:%= $(INSTALL_BIN)/%)
INSTALL_LIBS = $(INSTALL_BIN) $(LIBNAME:%= $(INSTALL_BIN)/%)
INSTALL_INC = $(INSTALL_INCLUDE) $(INC:%= $(INSTALL_INCLUDE)/%)
INSTALL_OSINCLUDE = $(INSTALL_INCLUDE)/os/vxWorks
INSTALL_OSINC = $(INSTALL_OSINCLUDE) $(OSINC:%= $(INSTALL_OSINCLUDE)/%)
INSTALL_INCREC = $(INSTALL_INCLUDE) $(INCREC:%= $(INSTALL_INCLUDE)/%)
MANLIST = 1 2 3 4 5 6 7 8 9
INSTALL_MANS = $(foreach n, \
	$(MANLIST),$(INSTALL_MAN)/man$(n) $(MAN$(n):%= $(INSTALL_MAN)/man$(n)/%))
INSTALL_DOCS = $(INSTALL_DOC) $(DOCS:%= $(INSTALL_DOC)/%)
INSTALL_SCRIPTS = $(INSTALL_BIN) $(SCRIPTS:%= $(INSTALL_BIN)/%)
INSTALL_INSTALLS = $(INSTALL_BIN) $(INSTALLS:%= $(INSTALL_BIN)/%)

INSTALL_BPTS = $(INSTALL_DBD) $(BPTS:%= $(INSTALL_DBD)/%)
INSTALL_DBS = $(INSTALL_DBD) $(DBDINSTALL:%= $(INSTALL_DBD)/%)\
              $(INSTALL_DBD) $(RECTYPES:%.h= $(INSTALL_DBD)/%.dbd)\
              $(INSTALL_DBD) $(MENUS:%.h= $(INSTALL_DBD)/%.dbd)

INSTALL_DBDNAME = $(INSTALL_DBD) $(DBDNAME:%= $(INSTALL_DBD)/%)

MAN_DIRECTORY_TARGETS = $(foreach n, $(MANLIST),$(INSTALL_MAN)/man$(n))

DIRECTORY_TARGETS = $(INSTALL_INCLUDE) $(INSTALL_DOC) $(INSTALL_DBD) \
	$(INSTALL_OSINCLUDE) $(INSTALL_INCLUDE)/os \
	$(INSTALL_LOCATION_BIN) $(INSTALL_BIN) \
	$(MAN_DIRECTORY_TARGETS) $(INSTALL_MAN)

all:: install 

rebuild:: clean install

pre_build:: 

build:: pre_build $(MENUS) $(RECTYPES) $(BPTS)\
         $(LIBNAME) $(TARGETS) $(PROD) $(DBDNAME)

inc:: $(INSTALL_INCLUDE) $(INSTALL_INC) $(INSTALL_INCLUDE)/os \
	$(INSTALL_OSINCLUDE) $(INSTALL_OSINC)

install:: inc buildInstall 

buildInstall :: build $(INSTALL_INCREC)\
	 $(INSTALL_LOCATION_BIN) \
         $(INSTALL_LIBS) $(TARGETS) $(INSTALL_PROD) \
	 $(INSTALL_MAN) $(INSTALL_MANS)\
         $(INSTALL_DOCS) $(INSTALL_SCRIPTS)\
         $(INSTALL_INSTALLS) $(INSTALL_DBS) $(INSTALL_BPTS)\
         $(INSTALL_DBDNAME)

depends:: $(SRCS.c) $(SRCS.cc)
ifdef SRCS
	echo you have a SRCS in your Makefile
	exit 2
endif
ifdef SRCS.c
	$(DEPENDS_RULE.c)
endif
ifdef SRCS.cc
	$(DEPENDS_RULE.cc)
endif

clean::
	@echo "Cleaning"
	@$(RM) *.i *.o *.a $(TARGETS) $(PROD) $(LIBNAME) $(INC) \
	$(DBDINSTALL) $(MENUS) $(RECTYPES) $(BPTS) $(DBDNAME)

$(DIRECTORY_TARGETS) :
	@$(MKDIR) $@

#  The order of the following dependencies is
#  VERY IMPORTANT !!!!

%: %.o
	$(RM) $@
	$(LINK.c) $@ $<

#$(PROD): $(OBJS)
#	$(RM) $@
#	$(LINK.c) $@ $(OBJS)

%.o: %.c
	$(RM) $@
	$(COMPILE.c) $<

%.o: ../%.c
	$(RM) $@
	$(COMPILE.c) $<

%.o: %.cc
	$(RM) $@
	$(COMPILE.cc) $<

%.o: ../%.cc
	$(RM) $@
	$(COMPILE.cc) $<

%.c: ../%.y
	$(RM) y.tab.c y.tab.h
	$(YACC) $(YACCOPT) $<
	@if [ -f y.tab.c ]; \
		then \
			echo "$(MV) y.tab.c $*.c"; \
			$(MV) y.tab.c $*.c; \
	fi
	@if [ -f y.tab.h ]; \
		then \
			echo "$(MV) y.tab.h $*.h"; \
			$(MV) y.tab.h $*.h; \
	fi

%.c: ../%.l
	$(RM) lex.yy.c
	$(LEX) $(LEXOPT) $<
	$(RM) $@
	$(MV) lex.yy.c $@

#state notation language rules
%.c: ../%.st
	@echo "preprocessing $*.st"
	@$(RM) $*.i
	$(CPP) $(CPPFLAGS) $< $*.i
	@echo "converting $*.i"
	@$(RM) $@
	$(SNC) $(TARGET_SNCFLAGS) $(SNCFLAGS) $*.i

%.c: %.stt
	@echo "converting $<
	@$(RM) $@
	$(SNC) $(TARGET_SNCFLAGS) $(SNCFLAGS) $<

# Capfast Rules:
%.db: %.edf
	$(E2DB) $(E2SR_SYSFLAGS) $(E2SR_FLAGS) $<

%.db: ../%.edf
	$(E2DB) $(E2SR_SYSFLAGS) $(E2SR_FLAGS) $<

%.edf: ../%.sch $(DEPSCHS)
	@if [ ! -f cad.rc -a -r ../cad.rc ] ; then ln -s ../cad.rc ; fi
	$(SCH2EDIF) $(SCH2EDIF_SYSFLAGS) $(SCH2EDIF_FLAGS) $<

# Mangen Rule:
%.1:%
	$(RM) $(<F)
	$(RM) $(<F).nr
	ln -s $<
	$(MANGEN) -s $(<F)
	$(MV) $(<F).nr $(<F).1


$(INSTALL_DBD)/%: % 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(INSTALL_DBD)

$(INSTALL_DBD)/%: ../% 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(INSTALL_DBD)

%Record.h: %Record.dbd
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/dbToRecordtypeH \
		$(USER_DBDFLAGS)  $<

%Record.h: ../%Record.dbd
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/dbToRecordtypeH \
		$(USER_DBDFLAGS)  $<

menu%.h: menu%.dbd
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/dbToMenuH $<

menu%.h: ../menu%.dbd
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/dbToMenuH $<

bpt%.dbd: bpt%.data
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/makeBpt $<

bpt%.dbd: ../bpt%.data
	$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/makeBpt $<

$(DBDNAME): ../$(DBDEXPAND)
	@echo expanding dbd
	@$(RM) $@
	$(EPICS_BASE)/bin/$(HOST_ARCH)/dbExpand\
		$(USER_DBDFLAGS) $< > $@

$(LIBNAME): $(LIBOBJS)
	@echo Building library $@
	@$(RM) $@
	$(LINK.c) $@ $(LIBOBJS)

$(INSTALL_BIN)/%: % 
	@echo "Installing $@"
	@$(INSTALL) -m 555 $< $(INSTALL_BIN)

$(INSTALL_BIN)/%: ../% 
	@echo "Installing $@"
	@$(INSTALL) -m 555 $< $(INSTALL_BIN)

$(INSTALL_BIN)/%: $(EPICS_BASE_BIN)/% 
	@echo "Installing $@"
	@$(INSTALL) -m 555 $< $(INSTALL_BIN)

$(addsuffix /%,$(MAN_DIRECTORY_TARGETS)) : % 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(@D)

$(addsuffix /%,$(MAN_DIRECTORY_TARGETS)) : ../% 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(@D)

$(INSTALL_INCLUDE)/%: % 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(@D)

$(INSTALL_INCLUDE)/%: ../% 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(@D)

$(INSTALL_DOC)/%: % 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(INSTALL_DOC)

$(INSTALL_DOC)/%: ../% 
	@echo "Installing $@"
	@$(INSTALL) -m 644 $< $(INSTALL_DOC)

.PRECIOUS: %.o %.c

.PHONY: all inc depends build install pre-build clean rebuild 

-include .DEPENDS

