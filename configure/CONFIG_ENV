#*************************************************************************
# Copyright (c) 2002 The University of Chicago, as Operator of Argonne
#     National Laboratory.
# Copyright (c) 2002 The Regents of the University of California, as
#     Operator of Los Alamos National Laboratory.
# EPICS BASE Versions 3.13.7
# and higher are distributed subject to a Software License Agreement found
# in file LICENSE that is included with this distribution. 
#*************************************************************************
#   $Id$
#   Author: Andrew Johnson
#   Date:   20 April 1995
#
#   Experimental Physics and Industrial Control System (EPICS)
#
#   CONFIG_ENV - EPICS Environment Parameter configuration file
#
# This file is interpreted by the Bourne Shell, so spaces are 
# not allowed around the '=' signs or in unquoted values.
# Makefile variables are not defined here.
#
# Note: This file is read by base/src/libCom/env/bldEnvdata.pl,
# so the variable definitions in here should be kept 'simple':
#   VAR=VALUE
# each one on a single line.
#


#  Default environment settings

# Channel Access:
# EPICS_CA_ADDR_LIST 
#   Augment beacon/search dest ip addr list
#   from white space separated ip addresses in this
#   environment variable. "Quote" if more than one addr.
#
# EPICS_CA_AUTO_ADDR_LIST 
#   YES = augment beacon/search dest ip
#   addr list from network interfaces found; NO = only use
#   EPICS_CA_ADDR_LIST to create this list.
#
# EPICS_CA_CONN_TMO 
#   after not seeing a server beacon for this number
#   of seconds the clients will send an echo request over
#   tcp/ip to verify the connection.
#
# EPICS_CA_REPEATER_PORT CA repeater port number.
#
# EPICS_CA_SERVER_PORT CA server port number.
#
# EPICS_CA_MAX_ARRAY_BYTES
#   This parameter specifies the size (in bytes) of the largest array 
#   that will transport through CA. It must be specified for both the 
#   client and the server library. 
#

EPICS_CA_ADDR_LIST=""
EPICS_CA_AUTO_ADDR_LIST=YES
EPICS_CA_CONN_TMO=30.0
EPICS_CA_REPEATER_PORT=5065
EPICS_CA_SERVER_PORT=5064
EPICS_CA_MAX_ARRAY_BYTES=16384

#
# These parameters are only used by the CA server library
#
# EPICS_CA_BEACON_PERIOD 
#   The quiescent sec between server beacons.
#
# EPICS_CAS_INTF_ADDR_LIST
#   This specifies a list of IP addresses identifying
#   a limited set of network interfaces for server communication. 
#
#   Specifically, this parameter specifies the interfaces from
#   which the server will accept TCP/IP connections. It also 
#   specifies that UDP search messages addressed to both
#   the IP addresses in EPICS_CAS_INTF_ADDR_LIST and also to
#   the broadcast addresses of corresponding LAN interfaces
#   will be accepted by the server. If this parameter is empty 
#   then all UDP search messages and TCP connection requests
#   addressed to the host are accepted. 
#
#   If EPICS_CA_AUTO_ADDR_LIST is NO, then the beacon address list
#   is not auto configured.
#
#   If EPICS_CA_AUTO_ADDR_LIST is YES and EPICS_CAS_INTF_ADDR_LIST
#   has _not_ been specified then beacons are sent to the broadcast 
#   addresses of all LAN interfaces and the destination addresses of 
#   all point-to-point serial interfaces. 
#
#   If EPICS_CA_AUTO_ADDR_LIST is YES and EPICS_CAS_INTF_ADDR_LIST
#   _has_ been specified then beacons are sent to the broadcast address 
#   of each LAN interface corresponding to an IP address in 
#   EPICS_CAS_INTF_ADDR_LIST or the destination address of 
#   a point-to-point serial interfaces corresponding to an IP
#   address in EPICS_CAS_INTF_ADDR_LIST. 
#
#   Beacons may be sent to additional hand configured addresses 
#   (see the notes below under EPICS_CAS_BEACON_ADDR_LIST).
#
# EPICS_CAS_BEACON_ADDR_LIST
#   If this parameter is specified, or if EPICS_CAS_INTF_ADDR_LIST 
#   isnt empty, then this parameter is used by the server library to 
#   augment the list of addresses beacons are sent to. Otherwise
#   EPICS_CA_ADDR_LIST is used to augment the list of addresses 
#   beacons are sent to.
#
# EPICS_CAS_SERVER_PORT
#   If this parameter is specified then it
#   and not EPICS_CA_SERVER_PORT is used to determine the server's
#   port number. It is possible to have multiple servers on the
#   same host on the same EPICS_CAS_SERVER_PORT port if the IP
#   kernel is modern (if it has multicast enhancements). In this
#   situation all servers will share the same user specified 
#   UDP port number and will be assigned unique TCP port numbers. 
#
#   The fact that the servers may not be using the user specified
#   port number for TCP will be nearly transparent to EPICS 
#   3.13 or higher clients that will be locating the servers
#   using the user specified UDP port number, but will be connecting 
#   to the servers using whatever TCP port has been assigned.
#   Unfortunately, a severe limitation exists in most IP
#   kernels: if multiple servers are listening for search requests 
#   addressed to the same UDP port then they will all receive a copy 
#   of each UDP message received by the IP kernel that has a broadcast
#   destination address. Unfortunately, in many IP kernel 
#   implementations only one of the servers will receive UDP
#   messages with a single host (unicast) destination address.
#
#   If experiencing trouble getting clients to connect
#   --------------------------------------------------
#
#   o Make sure that the broadcast addresses are identical on the
#   server's host and on the client's host. This can be checked 
#   on UNIX with "netstat -i" or "ifconfig -a"; on vxWorks with
#   ifShow; and on windows with ipconfig.
#   
#   o Make sure that the client and server are using the same UDP
#   port. Check the server's port by running "netstat -a | grep nnn"
#   where nnn is the port number involved. If you do not set 
#   EPICS_CA_SERVER_PORT or EPICS_CAS_SERVER_PORT then the default port 
#   will be 5064.
#   
#   o Two servers can run on the same host with the same server port number
#   if the following restrictions are understood (good luck). If the host has a
#   modern IP kernel it is possible to have two servers on the same UDP port.
#   It is not possible for two servers to run on the same host using the same 
#   TCP IP server port. If the CA server library detects that a 2nd server is 
#   attempting to start on the same port as an existing CA server then both 
#   servers will use the same UDP port if it is a modern IP kernel, and the 2nd 
#   server will be allocated a new TCP port. In this situation the clients will 
#   still be configured to use the same port number for both servers. The clients
#   will find the 2nd server via the shared UDP port, and transparently connect 
#   to the 2nd server's allocated TCP port. Be aware that If there are two server's 
#   running on the same host on the same UDP port then they will both receive all 
#   UDP search requests sent as broadcasts, but will unfortunately (due to a common
#   weakness of most IP kernel implementations) only one of the servers will 
#   typically receive UDP search requests sent to unicast addresses (i.e. a specific 
#   host's ip address). 
#

EPICS_CA_BEACON_PERIOD=15.0
EPICS_CAS_INTF_ADDR_LIST=""
EPICS_CAS_BEACON_ADDR_LIST=""
EPICS_CAS_SERVER_PORT=

# Log Server:
# EPICS_IOC_LOG_PORT Log server port number etc.
EPICS_IOC_LOG_PORT=7004

# Other services:

EPICS_CMD_PROTO_PORT=
EPICS_AR_PORT=7002

