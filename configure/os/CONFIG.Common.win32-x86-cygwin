# CONFIG.Common.win32-x86-cygwin
#
# $Revision-Id$
# This file is maintained by the build community.
#
# Definitions for cygwin-x86 target builds
# Sites may override these definitions in CONFIG_SITE.Common.cygwin-x86
#-------------------------------------------------------

# Include definitions common to all Unix targets
include $(CONFIG)/os/CONFIG.Common.UnixCommon

OS_CLASS = WIN32
ARCH_CLASS = x86

#  Definitions used when COMMANDLINE_LIBRARY is READLINE
LDLIBS_READLINE = -lreadline -lcurses

POSIX_CPPFLAGS = -D_POSIX_THREADS -D_POSIX_TIMERS
POSIX_LDLIBS += -lpthread

ARCH_DEP_CFLAGS += -m32
ARCH_DEP_LDFLAGS += -m32

# With no-cygwin option:
#	compiler defines _X86_ 1
#	compiler defines __MSVCRT__ 1
#	compiler defines __MINGW32__ 1
#	compiler defines __WIN32 1
#	compiler defines __WIN32__ 1
#	compiler defines _WIN32 1
#	compiler defines WIN32 1
#	compiler defines WINNT 1
#	compiler does not define  __unix __unix__ unix
#	compiler does not define  __CYGWIN__ __CYGWIN32__

OP_SYS_CPPFLAGS = -mno-cygwin
OP_SYS_LDFLAGS += -mno-cygwin
OP_SYS_LDLIBS = -lws2_32 -ladvapi32 -luser32 -lkernel32 -lwinmm

EXE = .exe

# Use .o for static object files, .obj for shared library object files
OBJ_NO  = .o
OBJ_YES = .obj
OBJ = $(OBJ_$(SHARED_LIBRARIES))

COMPILE.c   += $(if $(filter %$(OBJ),$@),-o $@)
COMPILE.cpp += $(if $(filter %$(OBJ),$@),-o $@)
HDEPENDS_ARCHFLAGS = -MT $*$(OBJ)

DLL_CFLAGS_YES = -DEPICS_BUILD_DLL
DLL_CFLAGS_NO  =
DLL_CFLAGS = $(DLL_CFLAGS_$(SHARED_LIBRARIES))
STATIC_CFLAGS_YES= $(DLL_CFLAGS)
STATIC_CFLAGS_NO=  $(DLL_CFLAGS) -DEPICS_CALL_DLL
STATIC_CXXFLAGS_YES= $(DLL_CFLAGS)
STATIC_CXXFLAGS_NO=  $(DLL_CFLAGS) -DEPICS_CALL_DLL

# Adjust names of libraries to build
#
SHRLIB_PREFIX =
SHRLIB_SUFFIX_BASE = .dll
SHRLIB_SUFFIX = $(SHRLIB_SUFFIX_BASE)
SHRLIBNAME_YES = $(BUILD_LIBRARY:%=%$(SHRLIB_SUFFIX))
TESTSHRLIBNAME_YES = $(TESTBUILD_LIBRARY:%=%$(SHRLIB_SUFFIX))
LOADABLE_SHRLIB_PREFIX =
LOADABLE_SHRLIB_SUFFIX = $(SHRLIB_SUFFIX_BASE)
LOADABLE_SHRLIBNAME = $(LOADABLE_BUILD_LIBRARY:%=%$(LOADABLE_SHRLIB_SUFFIX))

#
# When SHARED_LIBRARIES is YES we are building a DLL link library 
# When SHARED_LIBRARIES is NO we are building an object library
#
LIB_PREFIX_NO =
LIB_SUFFIX_NO = .lib
LIB_PREFIX_YES = lib
LIB_SUFFIX_YES = .dll.a
LIB_PREFIX = $(LIB_PREFIX_$(SHARED_LIBRARIES))
LIB_SUFFIX = $(LIB_SUFFIX_$(SHARED_LIBRARIES))

DLLSTUB_LIBNAME_YES = $(BUILD_LIBRARY:%=$(LIB_PREFIX)%$(LIB_SUFFIX))
DLLSTUB_LIBNAME = $(DLLSTUB_LIBNAME_$(SHARED_LIBRARIES))
TESTDLLSTUB_LIBNAME_YES = $(TESTBUILD_LIBRARY:%=$(LIB_PREFIX)%$(LIB_SUFFIX))
TESTDLLSTUB_LIBNAME = $(TESTDLLSTUB_LIBNAME_$(SHARED_LIBRARIES))
TESTLIBNAME_NO = $(TESTBUILD_LIBRARY:%=$(LIB_PREFIX)%$(LIB_SUFFIX))
TESTLIBNAME = $(TESTLIBNAME_$(SHARED_LIBRARIES))

#	dll install location
INSTALL_SHRLIB = $(INSTALL_BIN)

