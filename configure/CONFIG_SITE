#*************************************************************************
# Copyright (c) 2002 The University of Chicago, as Operator of Argonne
#     National Laboratory.
# Copyright (c) 2002 The Regents of the University of California, as
#     Operator of Los Alamos National Laboratory.
# EPICS BASE Versions 3.13.7
# and higher are distributed subject to a Software License Agreement found
# in file LICENSE that is included with this distribution. 
#*************************************************************************
#
#  $Id$
#
#  CONFIG_SITE  - config file
#	by Matthew Needes and Mike Bordua
#
#  This file is to be modified by the build system manager
#	only.
#


#  The host architecture performing the build,
#	i.e.: the arch running DCT/getrel/etc.
#       <operating system>-<architecture>[-<alternate compiler>]
#
#  Currently Supporting:
#	hpux-parisc
#	osf-alpha
#	solaris-sparc          (sun compiler used for host builds)
#	solaris-sparc-gnu      (GNU compiler used for host builds)
#	solaris-x86            (sun compiler used for host builds)
#	solaris-x86-gnu        (GNU compiler used for host builds)
#	sun4-x86               (sun compiler used for host builds)
#	linux-x86              (GNU compiler used for host builds)
#	win32-x86              (MS Visual C++ compiler used for host builds)
#	win32-x86-borland      (Borland C++ compiler used for host builds)
#	lynxos-x86
#	darwin-ppc
#	linux-mpc82xx

#  EPICS_HOST_ARCH is a required environment variable
#  Do not set EPICS_HOST_ARCH in this file. 
#  Use base/startup files to set EPICS_HOST_ARCH or 
#  set EPICS_HOST_ARCH on the GNU make command line.

#  The cross-compiler architectures to build EPICS for
#
#  Currently Supporting:
#       vxWorks-486
#       vxWorks-68040
#       vxWorks-68040lc
#       vxWorks-68060
#       vxWorks-pentium
#       vxWorks-ppc603
#       vxWorks-ppc604
#       RTEMS-gen68360
#       RTEMS-mvme167
#       RTEMS-pc386
#
# Definitions of CROSS_COMPILER_TARGET_ARCHS in
# configure/os/CONFIG_SITE.<host>.Common files will
# override 
#
#CROSS_COMPILER_TARGET_ARCHS=
CROSS_COMPILER_TARGET_ARCHS=vxWorks-68040 vxWorks-ppc604


#  If only a subset of the host architectures perform
#  the build for the CROSS_COMPILER_TARGET_ARCHS
#  uncomment the following line and specify them.
#
CROSS_COMPILER_HOST_ARCHS=

# Default ANSI level, individual Makefiles will override
#  if they cannot support ANSI compilation.
#   STRICT -  ANSI C - force warning flags
#   ANSI   -  ANSI C
#   TRAD   -  Standard C - Not appropriate here.
CMPLR=STRICT

# Default C++ compiler ANSI level
#   STRICT -  ANSI C++ force strict warning flags
#   NORMAL -  ANSI C++ optional warning flags
#   Individual Makefiles may override
CXXCMPLR=STRICT

#  Build shared libraries?
#  (archive libraries will also be built)
#        must be either YES or NO
#     NOTE: os/CONFIG.$(EPICS_HOST_ARCH).$(EPICS_HOST_ARCH) files and
#     os/CONFIG_SITE.$(EPICS_HOST_ARCH).$(EPICS_HOST_ARCH) files may override
#
#     NOTE WIN32: YES results in a DLL. CONFIG_SITE.Host.WIN32
#                 distribution file contains YES override
#
#     NOTE solaris,Linux, and sun4: If YES then LD_LIBRARY_PATH must
#     include fullpathname to $(INSTALL_LOCATION)/lib/$(EPICS_HOST_ARCH)
#     for both the base build and when invoking base executables
SHARED_LIBRARIES=NO

#  Build client objects statically ?
#        must be either YES or NO
STATIC_BUILD=NO

#  Should header dependancy files be automatically generated
#  for each C/C++ created object file?
#        must be either YES or NO
HDEPENDS=YES

#  Host build optimization
#	must be either YES or NO
HOST_OPT=YES

#  Cross build optimization
#	must be either YES or NO
CROSS_OPT=YES

#  Generate Verbose Compiler Warnings for Host builds
#	must be either YES or NO
HOST_WARN=YES

#  Generate Verbose Compiler Warnings for cross compile builds
#	must be either YES or NO
CROSS_WARN=YES

#  Installation directory
INSTALL_LOCATION=$(TOP)

#  Command-line input support
#
#  Currently Supporting:
#   EPICS    - Built-in EPICS routines (no command-line editing/history)
#   READLINE - GNU readline library
#   LIBTECLA - LIBTECLA library
#
#COMMANDLINE_LIBRARY=
COMMANDLINE_LIBRARY=READLINE
