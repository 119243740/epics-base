#
#  $Id$
#
#  CONFIG_SITE  - config file
#	by Matthew Needes and Mike Bordua
#
#  This file is to be modified by the build system manager
#	only.
#


#  The host architecture performing the build,
#	i.e.: the arch running DCT/getrel/etc.
#
#  Currently Supporting:
#	sun4
#	hp700
#	alpha
#	solaris
#	sgi
#	Linux
#	WIN32
#	LynxOS
#
#  EPICS_HOST_ARCH is an environment variable
#  EPICS_HOST_ARCH=$(shell /usr/local/epics/startup/EpicsHostArch)


#  The cross-compiler architectures to build EPICS for
#
#  Currently Supporting:
#       vxWorks-486
#       vxWorks-68040
#       vxWorks-68040lc
#       vxWorks-68060
#       vxWorks-pentium
#       vxWorks-ppc604
#       RTEMS-gen68360
#       RTEMS-mvme167
#
CROSS_COMPILER_TARGET_ARCHS=vxWorks-68040


#  If only a subset of the host architectures perform
#  the build for the CROSS_COMPILER_TARGET_ARCHS
#  uncomment the following line and specify them.
#
CROSS_COMPILER_HOST_ARCHS=

#  Client ANSI C Compiler (for Host builds)
#   GCC     GNU			(gcc -ansi)
#   ACC     OS VENDOR		(sun4/solaris: acc ; hp700: cc -Aa)
ANSI=ACC

#  C++ Compiler (for Host builds)
#   G++     GNU C++		(g++)
#   CCC     OS VENDOR C++	(sun4/solaris: CC ; hp700: aCC)
CPLUSPLUS=CCC

# Default ANSI level, individual Makefiles will override
#  if they cannot support ANSI compilation.
#   STRICT -  ANSI C - force warning flags
#   ANSI   -  ANSI C
#   TRAD   -  Standard C - Not appropriate here.
CMPLR=STRICT

# Default C++ compiler ANSI level
#   STRICT -  ANSI C++ force strict warning flags
#   NORMAL -  ANSI C++ optional warning flags
#   Individual Makefiles may override
CXXCMPLR=STRICT

#  Build shared libraries?
#  (archive libraries will also be built)
#        must be either YES or NO
#     NOTE: CONFIG_SITE.Host.$(HOST_ARCH) files may override
#
#     NOTE WIN32: YES results in a DLL. CONFIG_SITE.Host.WIN32
#                 distribution file contains YES override
#
#     NOTE solaris and sun4: If YES then LD_LIBRARY_PATH must
#     include fullpathname $(INSTALL_LOCATION)/lib/$(EPICS_HOST_ARCH)
#     for both the base build and when invoking base executables
SHARED_LIBRARIES=NO

#  Build client objects statically ?
#        must be either YES or NO
STATIC_BUILD=NO

#  Host build optimization
#	must be either YES or NO
HOST_OPT=YES

#  Cross build optimization
#	must be either YES or NO
CROSS_OPT=YES

#  Generate Verbose Compiler Warnings for Host builds
#	must be either YES or NO
HOST_WARN=YES

#  Generate Verbose Compiler Warnings for cross compile builds
#	must be either YES or NO
CROSS_WARN=YES
